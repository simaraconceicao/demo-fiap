steps:
  # Instala as dependências
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args: ['-c', 'npm install']
    id: 'install-dependencies'

  # Executa os testes
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args: ['-c', 'npm test']
    id: 'run-tests'

  # Constrói a imagem Docker
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/chat-ai-416420/demo-fiap:latest', '.']
    id: 'build-image'

  # Envia a imagem Docker para o Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/chat-ai-416420/demo-fiap:latest']
    id: 'push-image'

  # Implanta a imagem no Cloud Run (com verificação e criação do serviço se necessário)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud run services describe minha-demo-fiap --platform managed --region southamerica-east1 > /dev/null 2>&1; then
          echo "Service does not exist. Deploying new service..."
        fi
        gcloud run deploy minha-demo-fiap \
          --image gcr.io/chat-ai-416420/demo-fiap:latest \
          --platform managed \
          --region southamerica-east1 \
          --allow-unauthenticated
    id: 'deploy-cloud-run'

images:
  - 'gcr.io/chat-ai-416420/demo-fiap:latest'
